name: Issue Label Automation

on:
  issues:
    types: [opened, edited, labeled]

jobs:
  update-labels:
    runs-on: ubuntu-latest

    steps:
      - name: Set default "Not Started" if no state label present
        uses: actions/github-script@v6
        with:
          script: |
            // Get the list of labels on the issue
            const issueLabels = context.payload.issue.labels.map(label => label.name);
            
            // Define your custom state labels from your issue template
            const stateLabels = [
              "Ready for Consideration",
              "Ready for Refinement",
              "Ready for Implementation"
            ];
            
            // Check if any of the state labels is present
            const hasStateLabel = stateLabels.some(state => issueLabels.includes(state));
            
            // If none of these labels is present, then add the default "Not Started" label.
            if (!hasStateLabel) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: ["Not Started"]
              });
            }
      
      - name: Add "To Do" label when issue is Ready for Implementation
        uses: actions/github-script@v6
        with:
          script: |
            // Refresh the issue labels (in case they changed)
            const labels = context.payload.issue.labels.map(label => label.name);
            
            // If the issue is marked as "Ready for Implementation" and does not already have "To Do"
            if (labels.includes("Ready for Implementation") && !labels.includes("To Do")) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                labels: ["To Do"]
              });
            }
